generator client {
  provider = "prisma-client-js"
  output   = "../src/lib/generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  // User can set multiple reminders
  reminder Reminder[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum REMINDER_STATUS {
  UPCOMING
  PENDING
  COMPLETED
}

model Reminder {
  id String @id @default(cuid())

  // Used to track status of reminder for analytic purposes
  reminderStatus REMINDER_STATUS @default(UPCOMING)

  // Details of the problem
  problemId        String?
  problemName      String?
  problemStatement String?
  problemLink      String

  // Date when the reminder will be sent
  scheduledDate DateTime

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, problemId, problemLink])
}
